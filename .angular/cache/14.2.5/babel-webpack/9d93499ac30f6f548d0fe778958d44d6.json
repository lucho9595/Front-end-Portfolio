{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Coronel/Desktop/Proyect-Final/FrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ref, uploadBytes, list, getDownloadURL } from '@angular/fire/storage';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/storage\";\nexport class ImageService {\n  constructor(storage) {\n    this.storage = storage;\n    this.url = \"\";\n  }\n\n  uploadImage($event, name) {\n    const files = $event.target.files[0];\n    console.log(files);\n    const imgRefe = ref(this.storage, `imagen/` + name);\n    uploadBytes(imgRefe, files).then(_response => {\n      this.getImages();\n    }).catch(error => console.log(error));\n  }\n\n  getImages() {\n    var _this = this;\n\n    const imageRef = ref(this.storage, 'imagen');\n    list(imageRef).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (response) {\n        for (let item of response.items) {\n          _this.url = yield getDownloadURL(item);\n          console.log(\"La url es: \" + _this.url);\n        }\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()).catch(error => console.log(error));\n  }\n\n}\n\nImageService.ɵfac = function ImageService_Factory(t) {\n  return new (t || ImageService)(i0.ɵɵinject(i1.Storage));\n};\n\nImageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ImageService,\n  factory: ImageService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AACA,SAAkBA,GAAlB,EAAuBC,WAAvB,EAAoCC,IAApC,EAA0CC,cAA1C,QAAgE,uBAAhE;;;AAIA,OAAM,MAAOC,YAAP,CAAmB;EAGvBC,YAAoBC,OAApB,EAAoC;IAAhB;IAFpB,WAAc,EAAd;EAEyC;;EAElCC,WAAW,CAACC,MAAD,EAAcC,IAAd,EAA0B;IAC1C,MAAMC,KAAK,GAAGF,MAAM,CAACG,MAAP,CAAcD,KAAd,CAAoB,CAApB,CAAd;IACAE,OAAO,CAACC,GAAR,CAAYH,KAAZ;IACA,MAAMI,OAAO,GAAGd,GAAG,CAAC,KAAKM,OAAN,EAAe,YAAYG,IAA3B,CAAnB;IACAR,WAAW,CAACa,OAAD,EAAUJ,KAAV,CAAX,CACGK,IADH,CACQC,SAAS,IAAG;MAAG,KAAKC,SAAL;IAAkB,CADzC,EAEGC,KAFH,CAESC,KAAK,IAAIP,OAAO,CAACC,GAAR,CAAYM,KAAZ,CAFlB;EAGD;;EAEDF,SAAS;IAAA;;IACP,MAAMG,QAAQ,GAAGpB,GAAG,CAAC,KAAKM,OAAN,EAAe,QAAf,CAApB;IACAJ,IAAI,CAACkB,QAAD,CAAJ,CACGL,IADH;MAAA,6BACQ,WAAMM,QAAN,EAAiB;QACrB,KAAK,IAAIC,IAAT,IAAiBD,QAAQ,CAACE,KAA1B,EAAiC;UAC/B,KAAI,CAACC,GAAL,SAAiBrB,cAAc,CAACmB,IAAD,CAA/B;UACAV,OAAO,CAACC,GAAR,CAAY,gBAAgB,KAAI,CAACW,GAAjC;QACD;MACF,CANH;;MAAA;QAAA;MAAA;IAAA,KAOGN,KAPH,CAOSC,KAAK,IAAIP,OAAO,CAACC,GAAR,CAAYM,KAAZ,CAPlB;EAQD;;AAxBsB;;;mBAAZf,cAAYqB;AAAA;;;SAAZrB;EAAYsB,SAAZtB,YAAY;EAAAuB,YAFX","names":["ref","uploadBytes","list","getDownloadURL","ImageService","constructor","storage","uploadImage","$event","name","files","target","console","log","imgRefe","then","_response","getImages","catch","error","imageRef","response","item","items","url","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Coronel\\Desktop\\Proyect-Final\\FrontEnd\\src\\app\\service\\image.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Storage, ref, uploadBytes, list, getDownloadURL } from '@angular/fire/storage';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImageService {\r\n  url: string = \"\";\r\n\r\n  constructor(private storage: Storage) { }\r\n\r\n  public uploadImage($event: any, name: string) {\r\n    const files = $event.target.files[0];\r\n    console.log(files);\r\n    const imgRefe = ref(this.storage, `imagen/` + name)\r\n    uploadBytes(imgRefe, files)\r\n      .then(_response => { this.getImages() })\r\n      .catch(error => console.log(error))\r\n  }\r\n\r\n  getImages() {\r\n    const imageRef = ref(this.storage, 'imagen')\r\n    list(imageRef)\r\n      .then(async response => {\r\n        for (let item of response.items) {\r\n          this.url = await getDownloadURL(item);\r\n          console.log(\"La url es: \" + this.url);\r\n        }\r\n      })\r\n      .catch(error => console.log(error))\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}